server:
  port: 30002

spring:
  application:
    name: gateway-service

  config:
    import: "optional:configserver:http://211.218.223.120:30003/"

  cloud:
    config:
      name: gatewayservice
      profile: prod

    gateway:
      routes:
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path= /user-service/members/loginId, /user-service/admin/login
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/members/{memberId}
            - Method=GET, PUT, DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - name: AuthenticationHeaderFilter
              args:
                propertyKey: token.secret
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/admin/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}
            - name: AuthenticationHeaderFilter
              args:
                propertyKey: admin.secret
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/user-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/user-service/(?<segment>.*), /$\{segment}


        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product-service/products/{productId}/favorite, /product-service/products/{productId}/inquires, /product-service/products/inquires/{inquireId}
            - Method=POST, PUT, DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/product-service/(?<segment>.*), /$\{segment}
            - name: AuthenticationHeaderFilter
              args:
                propertyKey: token.secret
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product-service/**
            - Method=POST, PUT, DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/product-service/(?<segment>.*), /$\{segment}
            - name: AuthenticationHeaderFilter
              args:
                propertyKey: admin.secret
        - id: product-service
          uri: lb://PRODUCT-SERVICE
          predicates:
            - Path=/product-service/**
            - Method=GET
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/product-service/(?<segment>.*), /$\{segment}


        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/coupon, /order-service/coupon/{couponId}
            - Method=POST, PUT, DELETE
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
            - name: AuthenticationHeaderFilter
              args:
                propertyKey: admin.secret
        - id: order-service
          uri: lb://ORDER-SERVICE
          predicates:
            - Path=/order-service/**
          filters:
            - RemoveRequestHeader=Cookie
            - RewritePath=/order-service/(?<segment>.*), /$\{segment}
            - name: AuthenticationHeaderFilter
              args:
                propertyKey: token.secret


      default-filters:
        - name: GlobalFilter

eureka:
  instance:
    instance-id: ${spring.application.name}:${spring.application.instance_id:${random.value}}
    prefer-ip-address: true
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://211.218.223.120:30001/eureka